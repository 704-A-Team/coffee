<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oracle.coffee.dto.order.ordersMapper">

	<!-- product 테이블 select (join product_price) -->
	<select id="selectOrdersProducts" resultType="OrdersProductDto">
		select p.product_code, p.product_name, pp.price
		from product p, product_price pp
		where p.product_code = pp.product_code
		and p.product_isdel = 0 and p.product_isorder = 1
		and sysdate between to_date(pp.start_date, 'yyyy-mm-dd') and to_date(pp.end_date, 'yyyy-mm-dd')
	</select>
	
	<!-- orders 테이블 insert -->
	<insert id="insertOrders" statementType="CALLABLE" parameterType="OrdersDto">
		call new_orders (
			#{orders_client_code, mode=IN},
			#{order_status, mode=IN},
			#{order_note, mode=IN},
			#{order_code, mode=OUT, jdbcType=INTEGER}
		)
	</insert>
	
	<!-- orders_detail 테이블 insert all -->
	<insert id="insertAllOrdersDetails" parameterType="java.util.List">
		insert all
		<foreach collection="list" item="item" separator=" ">
			into orders_detail values (#{item.order_code}, #{item.product_code}, #{item.order_amount}, #{item.order_ddate}, #{item.order_datail_status})
		</foreach>
		select * from dual
	</insert>
	
	<!--  orders 테이블 select (join orders_detail) -->
	<resultMap type="OrdersDto" id="OrdersJoinDetail">
		<result property="order_code" column="order_code"/>
		<result property="orders_client_code" column="orders_client_code"/>
		<result property="orders_perm_code" column="orders_perm_code"/>
		<result property="order_note" column="order_note"/>
		<result property="order_refuse" column="order_refuse"/>
		<result property="order_status" column="order_status"/>
		<result property="order_reg_date" column="order_reg_date"/>
		
		<collection property="orders_details" ofType="OrdersDetailDto" notNullColumn="product_code">
			<result property="order_code" column="order_code"/>
			<result property="product_code" column="product_code"/>
			<result property="order_amount" column="order_amount"/>
			<result property="order_ddate" column="order_ddate"/>
			<result property="order_datail_status" column="order_datail_status"/>
			<result property="product_name" column="product_name"/>
			<result property="price" column="price"/>
		</collection>
	</resultMap>
	
	<select id="selectOrderByCode" parameterType="int" resultMap="OrdersJoinDetail">
		select o.*, od.*, p.product_name, pp.price
		from orders o, orders_detail od, product p, product_price pp
		where o.order_code = od.order_code(+)
		and od.product_code = p.product_code
		and od.product_code = pp.product_code
		and o.order_code = #{code}
		and sysdate between to_date(pp.start_date, 'yyyy-mm-dd') and to_date(pp.end_date, 'yyyy-mm-dd')
	</select>
	
	<!-- orders_detail 테이블 delete -->
	<delete id="deleteAllOrdersDetails" parameterType="int">
		delete from orders_detail where order_code = #{code}
	</delete>
	
	<!-- orders 테이블 update order_note -->
	<update id="updateOrdersNote" parameterType="OrdersDto">
		update orders set order_note = #{order_note} where order_code = #{order_code}
	</update>
	
	<!-- orders 테이블 update order_status -->
	<update id="updateOrdersStatus" parameterType="OrdersDto">
		update orders set order_status = #{order_status} where order_code = #{order_code}
	</update>

</mapper>